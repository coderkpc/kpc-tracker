{"code":"/*\r\n * @Author: 柯芃丞 kepengcheng314@163.com\r\n * @Date: 2022-09-10 13:25:57\r\n * @Description: Tracker类\r\n *\r\n */\r\nimport { TrackerConfig } from \"../types/index\";\r\nimport { createHistoryEvent } from \"../utils/pv\";\r\n// 鼠标事件\r\nconst MouseEventList = ['click', 'dblclick', 'contextmenu', 'mousedown', 'mouseup', 'mouseenter', 'mouseout', 'mouseover'];\r\nexport default class Tracker {\r\n    constructor(options) {\r\n        // 用户传入的参数覆盖默认参数\r\n        this.data = Object.assign(this.initDefault(), options);\r\n        this.installTracker();\r\n    }\r\n    // 默认参数\r\n    initDefault() {\r\n        // 重写history方法\r\n        window.history['pushState'] = createHistoryEvent('pushState');\r\n        window.history['replaceState'] = createHistoryEvent('replaceState');\r\n        return {\r\n            sdkVersion: TrackerConfig.sdkVerion,\r\n            historyTracker: false,\r\n            hashTracker: false,\r\n            domTracker: false,\r\n            jsError: false\r\n        };\r\n    }\r\n    // 设置用户id\r\n    setUserId(uuid) {\r\n        this.data.uuid = uuid;\r\n    }\r\n    // 透传字段设置\r\n    setExtra(extra) {\r\n        this.data.extra = extra;\r\n    }\r\n    // 手动上报\r\n    sendTracker(data) {\r\n        this.reportTracker(data);\r\n    }\r\n    // dom上报\r\n    targetKeyReport() {\r\n        MouseEventList.forEach(event => {\r\n            window.addEventListener(event, (e) => {\r\n                // 断言成一个元素\r\n                const target = e.target;\r\n                // 读取属性\r\n                const targetKey = target.getAttribute('target-key');\r\n                if (targetKey) {\r\n                    this.reportTracker({\r\n                        event,\r\n                        targetKey\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    jsError() {\r\n        this.errorEvent();\r\n        this.promiseReject();\r\n    }\r\n    // js error上报\r\n    errorEvent() {\r\n        window.addEventListener('error', event => {\r\n            this.reportTracker({\r\n                event: 'error',\r\n                targetKey: 'message',\r\n                message: event.message,\r\n            });\r\n        });\r\n    }\r\n    // promise错误上报\r\n    promiseReject() {\r\n        window.addEventListener('unhandledrejection', event => {\r\n            event.promise.catch(error => {\r\n                this.reportTracker({\r\n                    event: 'Promise',\r\n                    targetKey: 'message',\r\n                    message: error\r\n                });\r\n            });\r\n        });\r\n    }\r\n    // 事件捕获器\r\n    captureEvents(mouseEventList, targetKey, data) {\r\n        mouseEventList.forEach(event => {\r\n            window.addEventListener(event, () => {\r\n                // 数据上报\r\n                this.reportTracker({\r\n                    event,\r\n                    targetKey,\r\n                    data\r\n                });\r\n            });\r\n        });\r\n    }\r\n    installTracker() {\r\n        // 是否开启historyTracker\r\n        if (this.data.historyTracker) {\r\n            this.captureEvents(['pushState', 'replaceState', 'popstate'], 'history-pv');\r\n        }\r\n        // 是否开启hashTracker\r\n        if (this.data.hashTracker) {\r\n            this.captureEvents(['hashchange'], 'hash-pv');\r\n        }\r\n        // 是否开启domTracker\r\n        if (this.data.domTracker) {\r\n            this.targetKeyReport();\r\n        }\r\n        // 是否开启js上报\r\n        if (this.data.jsError) {\r\n            this.jsError();\r\n        }\r\n    }\r\n    reportTracker(data) {\r\n        // 定义参数\r\n        const params = Object.assign(this.data, data, {\r\n            time: new Date().getTime()\r\n        });\r\n        // 定义请求头\r\n        let headers = {\r\n            type: 'application/x-www-form-urlencoded'\r\n        };\r\n        let blob = new Blob([JSON.stringify(params)], headers);\r\n        // 这个api在页面关闭后仍然会请求，适合做埋点\r\n        navigator.sendBeacon(this.data.requestUrl, blob);\r\n    }\r\n}\r\n","references":["D:/develop/track/src/types/index.ts","D:/develop/track/src/utils/pv.ts"]}
